~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Opdracht 1.b clogfile
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Logfile (C versie)

Een logfile wordt vaak gebruikt om tijdens het draaien van een server 
programma op de hoogte te blijven van de status van de uitvoering. Het is een 
tekstbestand dat steeds groter wordt. Mede door deze eenvoud is het een van de
snelste manieren om snel tekstuele (soms binaire) data op te slaan. 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Hardware 
*	Laptop
*	Raspberry Pi

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Software 
*	Via ssh-sessie: gcc
*	Via ssh-sessie: nano, vi, … 
*	Via drive-mapping: Notepad++, Visual Code, …
*	Aantal TODO’s: 2

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Folders en bestanden:
01.b/clogfile.c                                                    aangeleverd
01.b/logfile.h                                                     aangeleverd
01.b/logfile.c                                                     aangeleverd
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



clogfile.c
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// 1.b clogfile
//
// gcc -Wall -o clogfile clogfile.c logfile.c
// ./clogfile

#include <stdio.h>
#include "logfile.h"

int main(int nArgc, char* aArgv[]) {

  FILE *pFile;
  char sBuf[100];

  // Initialiseren
  printf("01.b logfile\n\n");
  pFile = logfile_open("log1.txt");
  if (pFile == NULL) {
    printf("Fout: de logfile kon niet geopend worden!");
    printf("\nAfgebroken :(\n\n");
  };

  // Maak 1000 keer
  for (int i = 0; i < 1000; i++) {
    //TODO #2: wijzig de tekst i kwadraad te tonen
    sprintf(sBuf, "%d ", i);

    printf(sBuf);
    logfile_write(pFile, sBuf);
  };

  // Afsluiten
  logfile_close(pFile);
  printf("\nAfgesloten :-)\n\n");
  return 0;
};



logfile.h
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// 1.b clogfile

#ifndef _LOGFILE_H_
#define _LOGFILE_H_

  #include <stdbool.h>
  #include <stdio.h>

  //TODO #1: voeg de logfile 'interface' toe

#endif // _LOGFILE_H_



logfile.c
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// 1.b clogfile

#include "logfile.h"

FILE* logfile_open(char* sFilename) {

  // Open de logfile om aan toe te voegen.
  return fopen(sFilename, "a");
};

bool logfile_close(FILE *pFile) {

  // Sluit het bestand (0 = succes)
  return fclose(pFile) == 0;
};

void logfile_write(FILE *pFile, char* pBuf) {

  char sNewline[] = "\n";

  // Schrijf alle letters.
  while (*pBuf > 0) {
    fputc(*pBuf, pFile);
    pBuf++;
  };

  // Sluit af met \n
  pBuf = sNewline;
  while (*pBuf > 0) {
    fputc(*pBuf, pFile);
    pBuf++;
  };
};
